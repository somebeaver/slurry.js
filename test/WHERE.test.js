import { flattenWhitespace } from './filters/whitespace.js'

// what we're testing
import { TestQuery } from './extend/TestQuery.js'

/**
 * Runs tests for the WHERE SQL.
 */
export async function whereTest() {
  ett.output('<h3>WHERE.test.js</h3>')

  /**
   * WHERE's are generated by the 'columns' option.
   */
  try {
    let basic = await new TestQuery({
      'table': 'some_table',
      'prefix': '',
      'columns': {
        'id': 1
      }
    })
    
    let expectedBasicSql = "SELECT * FROM some_table WHERE id = 1 LIMIT 100"
    ett.isEqual(flattenWhitespace(basic.sql), expectedBasicSql, 'Can construct basic WHERE using columns option')
  } catch(e) { ett.fail(e) }

  /**
   * Use multiple columns
   */
  try {
    let multi = await new TestQuery({
      'table': 'some_table',
      'prefix': '',
      'columns': {
        'id': 1,
        'name': 'Chuck'
      }
    })
    
    let expectedMultiSql = "SELECT * FROM some_table WHERE id = 1 AND name = 'Chuck' LIMIT 100"
    ett.isEqual(flattenWhitespace(multi.sql), expectedMultiSql, 'Can construct multi column WHERE using columns option')
  } catch(e) { ett.fail(e) }
}